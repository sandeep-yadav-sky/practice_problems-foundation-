/* SANDEEP YADAv*/
#include<bits/stdc++.h>
using namespace std;
#define lld long long int
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define mod 1000000007
#define fastio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
lld gcd(lld a,lld b){ if(a<b) { a=a+b; b=a-b; a=a-b;}while(b!=0){lld r=a%b; a=b; b=r;} return a;}
long long power(long long a, long long b, long long m) {a %= m;long long res = 1;while (b > 0) {if (b & 1)res = res * a % m;a = a * a % m;b >>= 1;}return res;}
void judge()
{
      #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    freopen("error.txt","w",stderr);
    #endif
}

typedef vector<vector<lld>> matrix;
matrix mul(matrix a, matrix b)
{
	lld n=a.size();
	matrix c(n,vector<lld>(n));
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			for(int k=0;k<n;k++)
				c[i][j]=(c[i][j]+a[i][k]*b[k][j])%mod;

			return c;
}
matrix matrixpower(matrix t,lld n)
{
	if(n==1)
		return t;
	if(n%2==1)
		return mul(t,matrixpower(t,n-1));
	else
	{
	    matrix s=matrixpower(t,n/2);
	 	return mul(s,s);
	}
}
int main()
{
    fastio;
   // judge();

    int n,a,b;
    cin>>n>>a>>b;
    matrix t{{0,1},{4,3}};

    // for(int i=0;i<t.size();i++)
    // {
    // 	for(int j=0;j<t[i].size();j++)
    // 		cout<<t[i][j]<<" ";
    // 	cout<<"\n";
    // }
    
    if(n==1)
    {
        cout<<a;
        return 0;
    }
    std::vector<lld>f{a,b};
    t=matrixpower(t,n-1);

    lld ans=((t[0][0]*a)%mod+(t[0][1]*b)%mod)%mod;
    cout<<ans;
    return 0;
}
